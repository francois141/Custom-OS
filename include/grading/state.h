/*
 * Copyright (c) 2019, ETH Zurich.
 * Copyright (c) 2022, The University of British Columbia.
 * All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Universitaetstrasse 6, CH-8092 Zurich. Attn: Systems Group.
 */

///////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                               //
//                   !! WARNING !!   DO NOT EDIT THIS FILE   !! WARNING !!                       //
//                                                                                               //
//      This file is part of the grading library and will be overwritten before grading.         //
//              To ensure tests are run correctly, do not edit this file                         //
//                                                                                               //
///////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __GRADING_STATE_H
#define __GRADING_STATE_H

#include <aos/aos.h>

#include "options.h"

extern coreid_t               grading_coreid;
extern int                    grading_argc;
extern char                 **grading_argv;
extern struct grading_options grading_options;
extern struct bootinfo       *grading_bootinfo;
extern const char            *grading_proc_name;


extern enum grading_argument_src {
    GRADING_ARG_SRC_ARGV,     // Use argc/argv direct
    GRADING_ARG_SRC_CMDLINE,  // The commandline in argv
    GRADING_ARG_SRC_ARGV_BI,  // In argc/argv there is a bootinfo pointer
    GRADING_ARG_SRC_BI,       // Bootinfo pointer provided explicitly
    GRADING_ARG_SRC_DONE      // We parsed the arguments
} grading_argument_src;

// Use grading_argument_source to get the arguments and call grading_handle_arg
// malloc must be available to do so (hence do not call me before grading_test_early)
void grading_parse_arguments(void);

#endif /* __GRADING_STATE_H */
